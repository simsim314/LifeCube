#include <iostream>
#include <vector>
#include <algorithm>
#include <ctime>
#include "LifeGrid256.h"
#include <omp.h>

using namespace std; 
void fill_grid(LifeGrid256& grid);
void fill_grid_gld(LifeGrid256& grid);

int main()
{
	int N = 47;
	int iters = 17000;
	const int num_threads = 8; 

	omp_set_num_threads(num_threads);

	LifeGrid256 grid[num_threads];

	clock_t startTime = clock();

	#pragma omp parallel
	{
		int th = omp_get_thread_num();

		grid[th].Init(N);
		fill_grid_gld(grid[th]);
		grid[th].RecalculateBorders();

		// some code here
		// to compute its execution duration in runtime

		grid[th].Iterate(iters);

	}

	double calc_time = double(clock() - startTime) / (double)CLOCKS_PER_SEC;
	grid[0].PrintLevel(0);

	//47 * 47 (grid size) * 8 (threads) * 256 (AVX) * 17,000 (iters) * 7 / 8 (min-max optimization skips 3/4 lines evry second iteration) = 67.3 billion cell evaluations
	cout << calc_time << " seconds. ~67.3 X 10^9 Cell evaluations " << endl;
}

void fill_grid_gld(LifeGrid256& grid)
{
	__m256i p1 = _mm256_set_epi32(4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295);
	grid.Set(0, 1, p1);
	grid.Set(1, 1, p1);
	grid.Set(2, 1, p1);
	grid.Set(4, 1, p1);
	grid.Set(5, 1, p1);
	grid.Set(6, 1, p1);
	grid.Set(8, 1, p1);
	grid.Set(9, 1, p1);
	grid.Set(10, 1, p1);
	grid.Set(12, 1, p1);
	grid.Set(13, 1, p1);
	grid.Set(14, 1, p1);
	grid.Set(16, 1, p1);
	grid.Set(17, 1, p1);
	grid.Set(18, 1, p1);
	grid.Set(20, 1, p1);
	grid.Set(21, 1, p1);
	grid.Set(22, 1, p1);
	grid.Set(24, 1, p1);
	grid.Set(25, 1, p1);
	grid.Set(26, 1, p1);
	grid.Set(28, 1, p1);
	grid.Set(29, 1, p1);
	grid.Set(30, 1, p1);
	grid.Set(32, 1, p1);
	grid.Set(33, 1, p1);
	grid.Set(34, 1, p1);
	grid.Set(36, 1, p1);
	grid.Set(37, 1, p1);
	grid.Set(38, 1, p1);
	grid.Set(40, 1, p1);
	grid.Set(41, 1, p1);
	grid.Set(42, 1, p1);
	grid.Set(44, 1, p1);
	grid.Set(45, 1, p1);
	grid.Set(46, 1, p1);
	grid.Set(0, 5, p1);
	grid.Set(1, 5, p1);
	grid.Set(2, 5, p1);
	grid.Set(4, 5, p1);
	grid.Set(5, 5, p1);
	grid.Set(6, 5, p1);
	grid.Set(8, 5, p1);
	grid.Set(9, 5, p1);
	grid.Set(10, 5, p1);
	grid.Set(12, 5, p1);
	grid.Set(13, 5, p1);
	grid.Set(14, 5, p1);
	grid.Set(16, 5, p1);
	grid.Set(17, 5, p1);
	grid.Set(18, 5, p1);
	grid.Set(20, 5, p1);
	grid.Set(21, 5, p1);
	grid.Set(22, 5, p1);
	grid.Set(24, 5, p1);
	grid.Set(25, 5, p1);
	grid.Set(26, 5, p1);
	grid.Set(28, 5, p1);
	grid.Set(29, 5, p1);
	grid.Set(30, 5, p1);
	grid.Set(32, 5, p1);
	grid.Set(33, 5, p1);
	grid.Set(34, 5, p1);
	grid.Set(36, 5, p1);
	grid.Set(37, 5, p1);
	grid.Set(38, 5, p1);
	grid.Set(40, 5, p1);
	grid.Set(41, 5, p1);
	grid.Set(42, 5, p1);
	grid.Set(44, 5, p1);
	grid.Set(45, 5, p1);
	grid.Set(46, 5, p1);
	grid.Set(0, 9, p1);
	grid.Set(1, 9, p1);
	grid.Set(2, 9, p1);
	grid.Set(4, 9, p1);
	grid.Set(5, 9, p1);
	grid.Set(6, 9, p1);
	grid.Set(8, 9, p1);
	grid.Set(9, 9, p1);
	grid.Set(10, 9, p1);
	grid.Set(12, 9, p1);
	grid.Set(13, 9, p1);
	grid.Set(14, 9, p1);
	grid.Set(16, 9, p1);
	grid.Set(17, 9, p1);
	grid.Set(18, 9, p1);
	grid.Set(20, 9, p1);
	grid.Set(21, 9, p1);
	grid.Set(22, 9, p1);
	grid.Set(24, 9, p1);
	grid.Set(25, 9, p1);
	grid.Set(26, 9, p1);
	grid.Set(28, 9, p1);
	grid.Set(29, 9, p1);
	grid.Set(30, 9, p1);
	grid.Set(32, 9, p1);
	grid.Set(33, 9, p1);
	grid.Set(34, 9, p1);
	grid.Set(36, 9, p1);
	grid.Set(37, 9, p1);
	grid.Set(38, 9, p1);
	grid.Set(40, 9, p1);
	grid.Set(41, 9, p1);
	grid.Set(42, 9, p1);
	grid.Set(44, 9, p1);
	grid.Set(45, 9, p1);
	grid.Set(46, 9, p1);
	grid.Set(0, 13, p1);
	grid.Set(1, 13, p1);
	grid.Set(2, 13, p1);
	grid.Set(4, 13, p1);
	grid.Set(5, 13, p1);
	grid.Set(6, 13, p1);
	grid.Set(8, 13, p1);
	grid.Set(9, 13, p1);
	grid.Set(10, 13, p1);
	grid.Set(12, 13, p1);
	grid.Set(13, 13, p1);
	grid.Set(14, 13, p1);
	grid.Set(16, 13, p1);
	grid.Set(17, 13, p1);
	grid.Set(18, 13, p1);
	grid.Set(20, 13, p1);
	grid.Set(21, 13, p1);
	grid.Set(22, 13, p1);
	grid.Set(24, 13, p1);
	grid.Set(25, 13, p1);
	grid.Set(26, 13, p1);
	grid.Set(28, 13, p1);
	grid.Set(29, 13, p1);
	grid.Set(30, 13, p1);
	grid.Set(32, 13, p1);
	grid.Set(33, 13, p1);
	grid.Set(34, 13, p1);
	grid.Set(36, 13, p1);
	grid.Set(37, 13, p1);
	grid.Set(38, 13, p1);
	grid.Set(40, 13, p1);
	grid.Set(41, 13, p1);
	grid.Set(42, 13, p1);
	grid.Set(44, 13, p1);
	grid.Set(45, 13, p1);
	grid.Set(46, 13, p1);
	grid.Set(0, 17, p1);
	grid.Set(1, 17, p1);
	grid.Set(2, 17, p1);
	grid.Set(4, 17, p1);
	grid.Set(5, 17, p1);
	grid.Set(6, 17, p1);
	grid.Set(8, 17, p1);
	grid.Set(9, 17, p1);
	grid.Set(10, 17, p1);
	grid.Set(12, 17, p1);
	grid.Set(13, 17, p1);
	grid.Set(14, 17, p1);
	grid.Set(16, 17, p1);
	grid.Set(17, 17, p1);
	grid.Set(18, 17, p1);
	grid.Set(20, 17, p1);
	grid.Set(21, 17, p1);
	grid.Set(22, 17, p1);
	grid.Set(24, 17, p1);
	grid.Set(25, 17, p1);
	grid.Set(26, 17, p1);
	grid.Set(28, 17, p1);
	grid.Set(29, 17, p1);
	grid.Set(30, 17, p1);
	grid.Set(32, 17, p1);
	grid.Set(33, 17, p1);
	grid.Set(34, 17, p1);
	grid.Set(36, 17, p1);
	grid.Set(37, 17, p1);
	grid.Set(38, 17, p1);
	grid.Set(40, 17, p1);
	grid.Set(41, 17, p1);
	grid.Set(42, 17, p1);
	grid.Set(44, 17, p1);
	grid.Set(45, 17, p1);
	grid.Set(46, 17, p1);
	grid.Set(0, 21, p1);
	grid.Set(1, 21, p1);
	grid.Set(2, 21, p1);
	grid.Set(4, 21, p1);
	grid.Set(5, 21, p1);
	grid.Set(6, 21, p1);
	grid.Set(8, 21, p1);
	grid.Set(9, 21, p1);
	grid.Set(10, 21, p1);
	grid.Set(12, 21, p1);
	grid.Set(13, 21, p1);
	grid.Set(14, 21, p1);
	grid.Set(16, 21, p1);
	grid.Set(17, 21, p1);
	grid.Set(18, 21, p1);
	grid.Set(20, 21, p1);
	grid.Set(21, 21, p1);
	grid.Set(22, 21, p1);
	grid.Set(24, 21, p1);
	grid.Set(25, 21, p1);
	grid.Set(26, 21, p1);
	grid.Set(28, 21, p1);
	grid.Set(29, 21, p1);
	grid.Set(30, 21, p1);
	grid.Set(32, 21, p1);
	grid.Set(33, 21, p1);
	grid.Set(34, 21, p1);
	grid.Set(36, 21, p1);
	grid.Set(37, 21, p1);
	grid.Set(38, 21, p1);
	grid.Set(40, 21, p1);
	grid.Set(41, 21, p1);
	grid.Set(42, 21, p1);
	grid.Set(44, 21, p1);
	grid.Set(45, 21, p1);
	grid.Set(46, 21, p1);
	grid.Set(0, 25, p1);
	grid.Set(1, 25, p1);
	grid.Set(2, 25, p1);
	grid.Set(4, 25, p1);
	grid.Set(5, 25, p1);
	grid.Set(6, 25, p1);
	grid.Set(8, 25, p1);
	grid.Set(9, 25, p1);
	grid.Set(10, 25, p1);
	grid.Set(12, 25, p1);
	grid.Set(13, 25, p1);
	grid.Set(14, 25, p1);
	grid.Set(16, 25, p1);
	grid.Set(17, 25, p1);
	grid.Set(18, 25, p1);
	grid.Set(20, 25, p1);
	grid.Set(21, 25, p1);
	grid.Set(22, 25, p1);
	grid.Set(24, 25, p1);
	grid.Set(25, 25, p1);
	grid.Set(26, 25, p1);
	grid.Set(28, 25, p1);
	grid.Set(29, 25, p1);
	grid.Set(30, 25, p1);
	grid.Set(32, 25, p1);
	grid.Set(33, 25, p1);
	grid.Set(34, 25, p1);
	grid.Set(36, 25, p1);
	grid.Set(37, 25, p1);
	grid.Set(38, 25, p1);
	grid.Set(40, 25, p1);
	grid.Set(41, 25, p1);
	grid.Set(42, 25, p1);
	grid.Set(44, 25, p1);
	grid.Set(45, 25, p1);
	grid.Set(46, 25, p1);
	grid.Set(0, 29, p1);
	grid.Set(1, 29, p1);
	grid.Set(2, 29, p1);
	grid.Set(4, 29, p1);
	grid.Set(5, 29, p1);
	grid.Set(6, 29, p1);
	grid.Set(8, 29, p1);
	grid.Set(9, 29, p1);
	grid.Set(10, 29, p1);
	grid.Set(12, 29, p1);
	grid.Set(13, 29, p1);
	grid.Set(14, 29, p1);
	grid.Set(16, 29, p1);
	grid.Set(17, 29, p1);
	grid.Set(18, 29, p1);
	grid.Set(20, 29, p1);
	grid.Set(21, 29, p1);
	grid.Set(22, 29, p1);
	grid.Set(24, 29, p1);
	grid.Set(25, 29, p1);
	grid.Set(26, 29, p1);
	grid.Set(28, 29, p1);
	grid.Set(29, 29, p1);
	grid.Set(30, 29, p1);
	grid.Set(32, 29, p1);
	grid.Set(33, 29, p1);
	grid.Set(34, 29, p1);
	grid.Set(36, 29, p1);
	grid.Set(37, 29, p1);
	grid.Set(38, 29, p1);
	grid.Set(40, 29, p1);
	grid.Set(41, 29, p1);
	grid.Set(42, 29, p1);
	grid.Set(44, 29, p1);
	grid.Set(45, 29, p1);
	grid.Set(46, 29, p1);
	grid.Set(0, 33, p1);
	grid.Set(1, 33, p1);
	grid.Set(2, 33, p1);
	grid.Set(4, 33, p1);
	grid.Set(5, 33, p1);
	grid.Set(6, 33, p1);
	grid.Set(8, 33, p1);
	grid.Set(9, 33, p1);
	grid.Set(10, 33, p1);
	grid.Set(12, 33, p1);
	grid.Set(13, 33, p1);
	grid.Set(14, 33, p1);
	grid.Set(16, 33, p1);
	grid.Set(17, 33, p1);
	grid.Set(18, 33, p1);
	grid.Set(20, 33, p1);
	grid.Set(21, 33, p1);
	grid.Set(22, 33, p1);
	grid.Set(24, 33, p1);
	grid.Set(25, 33, p1);
	grid.Set(26, 33, p1);
	grid.Set(28, 33, p1);
	grid.Set(29, 33, p1);
	grid.Set(30, 33, p1);
	grid.Set(32, 33, p1);
	grid.Set(33, 33, p1);
	grid.Set(34, 33, p1);
	grid.Set(36, 33, p1);
	grid.Set(37, 33, p1);
	grid.Set(38, 33, p1);
	grid.Set(40, 33, p1);
	grid.Set(41, 33, p1);
	grid.Set(42, 33, p1);
	grid.Set(44, 33, p1);
	grid.Set(45, 33, p1);
	grid.Set(46, 33, p1);
	grid.Set(0, 37, p1);
	grid.Set(1, 37, p1);
	grid.Set(2, 37, p1);
	grid.Set(4, 37, p1);
	grid.Set(5, 37, p1);
	grid.Set(6, 37, p1);
	grid.Set(8, 37, p1);
	grid.Set(9, 37, p1);
	grid.Set(10, 37, p1);
	grid.Set(12, 37, p1);
	grid.Set(13, 37, p1);
	grid.Set(14, 37, p1);
	grid.Set(16, 37, p1);
	grid.Set(17, 37, p1);
	grid.Set(18, 37, p1);
	grid.Set(20, 37, p1);
	grid.Set(21, 37, p1);
	grid.Set(22, 37, p1);
	grid.Set(24, 37, p1);
	grid.Set(25, 37, p1);
	grid.Set(26, 37, p1);
	grid.Set(28, 37, p1);
	grid.Set(29, 37, p1);
	grid.Set(30, 37, p1);
	grid.Set(32, 37, p1);
	grid.Set(33, 37, p1);
	grid.Set(34, 37, p1);
	grid.Set(36, 37, p1);
	grid.Set(37, 37, p1);
	grid.Set(38, 37, p1);
	grid.Set(40, 37, p1);
	grid.Set(41, 37, p1);
	grid.Set(42, 37, p1);
	grid.Set(44, 37, p1);
	grid.Set(45, 37, p1);
	grid.Set(46, 37, p1);
	grid.Set(0, 41, p1);
	grid.Set(1, 41, p1);
	grid.Set(2, 41, p1);
	grid.Set(4, 41, p1);
	grid.Set(5, 41, p1);
	grid.Set(6, 41, p1);
	grid.Set(8, 41, p1);
	grid.Set(9, 41, p1);
	grid.Set(10, 41, p1);
	grid.Set(12, 41, p1);
	grid.Set(13, 41, p1);
	grid.Set(14, 41, p1);
	grid.Set(16, 41, p1);
	grid.Set(17, 41, p1);
	grid.Set(18, 41, p1);
	grid.Set(20, 41, p1);
	grid.Set(21, 41, p1);
	grid.Set(22, 41, p1);
	grid.Set(24, 41, p1);
	grid.Set(25, 41, p1);
	grid.Set(26, 41, p1);
	grid.Set(28, 41, p1);
	grid.Set(29, 41, p1);
	grid.Set(30, 41, p1);
	grid.Set(32, 41, p1);
	grid.Set(33, 41, p1);
	grid.Set(34, 41, p1);
	grid.Set(36, 41, p1);
	grid.Set(37, 41, p1);
	grid.Set(38, 41, p1);
	grid.Set(40, 41, p1);
	grid.Set(41, 41, p1);
	grid.Set(42, 41, p1);
	grid.Set(44, 41, p1);
	grid.Set(45, 41, p1);
	grid.Set(46, 41, p1);
	grid.Set(0, 45, p1);
	grid.Set(1, 45, p1);
	grid.Set(2, 45, p1);
	grid.Set(4, 45, p1);
	grid.Set(5, 45, p1);
	grid.Set(6, 45, p1);
	grid.Set(8, 45, p1);
	grid.Set(9, 45, p1);
	grid.Set(10, 45, p1);
	grid.Set(12, 45, p1);
	grid.Set(13, 45, p1);
	grid.Set(14, 45, p1);
	grid.Set(16, 45, p1);
	grid.Set(17, 45, p1);
	grid.Set(18, 45, p1);
	grid.Set(20, 45, p1);
	grid.Set(21, 45, p1);
	grid.Set(22, 45, p1);
	grid.Set(24, 45, p1);
	grid.Set(25, 45, p1);
	grid.Set(26, 45, p1);
	grid.Set(28, 45, p1);
	grid.Set(29, 45, p1);
	grid.Set(30, 45, p1);
	grid.Set(32, 45, p1);
	grid.Set(33, 45, p1);
	grid.Set(34, 45, p1);
	grid.Set(36, 45, p1);
	grid.Set(37, 45, p1);
	grid.Set(38, 45, p1);
	grid.Set(40, 45, p1);
	grid.Set(41, 45, p1);
	grid.Set(42, 45, p1);
	grid.Set(44, 45, p1);
	grid.Set(45, 45, p1);
	grid.Set(46, 45, p1);

}
void fill_grid(LifeGrid256& grid)
{
	__m256i p1 = _mm256_set_epi32(4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295);

	grid.Set(36, 8, p1);
	grid.Set(35, 9, p1);
	grid.Set(37, 9, p1);
	grid.Set(34, 10, p1);
	grid.Set(37, 10, p1);
	grid.Set(34, 12, p1);
	grid.Set(36, 12, p1);
	grid.Set(5, 13, p1);
	grid.Set(6, 13, p1);
	grid.Set(8, 13, p1);
	grid.Set(13, 13, p1);
	grid.Set(14, 13, p1);
	grid.Set(16, 13, p1);
	grid.Set(33, 13, p1);
	grid.Set(34, 13, p1);
	grid.Set(5, 14, p1);
	grid.Set(7, 14, p1);
	grid.Set(8, 14, p1);
	grid.Set(13, 14, p1);
	grid.Set(15, 14, p1);
	grid.Set(16, 14, p1);
	grid.Set(33, 14, p1);
	grid.Set(34, 14, p1);
	grid.Set(43, 14, p1);
	grid.Set(45, 14, p1);
	grid.Set(9, 15, p1);
	grid.Set(10, 15, p1);
	grid.Set(17, 15, p1);
	grid.Set(18, 15, p1);
	grid.Set(34, 15, p1);
	grid.Set(36, 15, p1);
	grid.Set(45, 15, p1);
	grid.Set(46, 15, p1);
	grid.Set(9, 16, p1);
	grid.Set(17, 16, p1);
	grid.Set(45, 16, p1);
	grid.Set(46, 16, p1);
	grid.Set(47, 16, p1);
	grid.Set(10, 17, p1);
	grid.Set(18, 17, p1);
	grid.Set(34, 17, p1);
	grid.Set(45, 17, p1);
	grid.Set(9, 18, p1);
	grid.Set(10, 18, p1);
	grid.Set(17, 18, p1);
	grid.Set(18, 18, p1);
	grid.Set(34, 18, p1);
	grid.Set(36, 18, p1);
	grid.Set(37, 18, p1);
	grid.Set(5, 19, p1);
	grid.Set(6, 19, p1);
	grid.Set(8, 19, p1);
	grid.Set(13, 19, p1);
	grid.Set(14, 19, p1);
	grid.Set(16, 19, p1);
	grid.Set(45, 19, p1);
	grid.Set(5, 20, p1);
	grid.Set(7, 20, p1);
	grid.Set(8, 20, p1);
	grid.Set(13, 20, p1);
	grid.Set(15, 20, p1);
	grid.Set(16, 20, p1);
	grid.Set(32, 20, p1);
	grid.Set(34, 20, p1);
	grid.Set(45, 20, p1);
	grid.Set(9, 21, p1);
	grid.Set(10, 21, p1);
	grid.Set(17, 21, p1);
	grid.Set(18, 21, p1);
	grid.Set(31, 21, p1);
	grid.Set(34, 21, p1);
	grid.Set(44, 21, p1);
	grid.Set(46, 21, p1);
	grid.Set(9, 22, p1);
	grid.Set(17, 22, p1);
	grid.Set(44, 22, p1);
	grid.Set(45, 22, p1);
	grid.Set(10, 23, p1);
	grid.Set(18, 23, p1);
	grid.Set(32, 23, p1);
	grid.Set(34, 23, p1);
	grid.Set(45, 23, p1);
	grid.Set(9, 24, p1);
	grid.Set(10, 24, p1);
	grid.Set(17, 24, p1);
	grid.Set(18, 24, p1);
	grid.Set(34, 24, p1);
	grid.Set(35, 24, p1);
	grid.Set(5, 25, p1);
	grid.Set(6, 25, p1);
	grid.Set(8, 25, p1);
	grid.Set(13, 25, p1);
	grid.Set(14, 25, p1);
	grid.Set(16, 25, p1);
	grid.Set(34, 25, p1);
	grid.Set(35, 25, p1);
	grid.Set(5, 26, p1);
	grid.Set(7, 26, p1);
	grid.Set(8, 26, p1);
	grid.Set(13, 26, p1);
	grid.Set(15, 26, p1);
	grid.Set(16, 26, p1);
	grid.Set(32, 26, p1);
	grid.Set(34, 26, p1);
	grid.Set(48, 26, p1);
	grid.Set(48, 27, p1);
	grid.Set(49, 27, p1);
	grid.Set(31, 28, p1);
	grid.Set(34, 28, p1);
	grid.Set(47, 28, p1);
	grid.Set(49, 28, p1);
	grid.Set(32, 29, p1);
	grid.Set(34, 29, p1);
	grid.Set(48, 29, p1);
	grid.Set(33, 30, p1);
	grid.Set(48, 30, p1);
	grid.Set(62, 30, p1);
	grid.Set(63, 30, p1);
	grid.Set(61, 31, p1);
	grid.Set(62, 31, p1);
	grid.Set(48, 32, p1);
	grid.Set(57, 32, p1);
	grid.Set(58, 32, p1);
	grid.Set(63, 32, p1);
	grid.Set(46, 33, p1);
	grid.Set(47, 33, p1);
	grid.Set(48, 33, p1);
	grid.Set(57, 33, p1);
	grid.Set(58, 33, p1);
	grid.Set(47, 34, p1);
	grid.Set(48, 34, p1);
	grid.Set(52, 36, p1);
	grid.Set(53, 36, p1);
	grid.Set(49, 38, p1);
	grid.Set(50, 38, p1);
	grid.Set(70, 38, p1);
	grid.Set(71, 38, p1);
	grid.Set(70, 39, p1);
	grid.Set(72, 39, p1);
	grid.Set(54, 40, p1);
	grid.Set(55, 40, p1);
	grid.Set(70, 40, p1);
	grid.Set(44, 41, p1);
	grid.Set(45, 41, p1);
	grid.Set(54, 41, p1);
	grid.Set(55, 41, p1);
	grid.Set(56, 41, p1);
	grid.Set(44, 42, p1);
	grid.Set(45, 42, p1);
	grid.Set(54, 42, p1);
	grid.Set(54, 44, p1);
	grid.Set(69, 44, p1);
	grid.Set(54, 45, p1);
	grid.Set(68, 45, p1);
	grid.Set(70, 45, p1);
	grid.Set(53, 46, p1);
	grid.Set(55, 46, p1);
	grid.Set(68, 46, p1);
	grid.Set(71, 46, p1);
	grid.Set(79, 46, p1);
	grid.Set(53, 47, p1);
	grid.Set(54, 47, p1);
	grid.Set(78, 47, p1);
	grid.Set(79, 47, p1);
	grid.Set(54, 48, p1);
	grid.Set(68, 48, p1);
	grid.Set(70, 48, p1);
	grid.Set(78, 48, p1);
	grid.Set(80, 48, p1);
	grid.Set(67, 49, p1);
	grid.Set(68, 49, p1);
	grid.Set(67, 50, p1);
	grid.Set(68, 50, p1);
	grid.Set(57, 51, p1);
	grid.Set(68, 51, p1);
	grid.Set(70, 51, p1);
	grid.Set(57, 52, p1);
	grid.Set(58, 52, p1);
	grid.Set(56, 53, p1);
	grid.Set(58, 53, p1);
	grid.Set(68, 53, p1);
	grid.Set(71, 53, p1);
	grid.Set(57, 54, p1);
	grid.Set(68, 54, p1);
	grid.Set(70, 54, p1);
	grid.Set(57, 55, p1);
	grid.Set(65, 56, p1);
	grid.Set(66, 56, p1);
	grid.Set(68, 56, p1);
	grid.Set(57, 57, p1);
	grid.Set(68, 57, p1);
	grid.Set(55, 58, p1);
	grid.Set(56, 58, p1);
	grid.Set(57, 58, p1);
	grid.Set(56, 59, p1);
	grid.Set(57, 59, p1);
	grid.Set(66, 59, p1);
	grid.Set(68, 59, p1);
	grid.Set(57, 60, p1);
	grid.Set(59, 60, p1);
	grid.Set(68, 60, p1);
	grid.Set(69, 60, p1);
	grid.Set(68, 61, p1);
	grid.Set(69, 61, p1);
	grid.Set(66, 62, p1);
	grid.Set(68, 62, p1);
	grid.Set(65, 64, p1);
	grid.Set(68, 64, p1);
	grid.Set(65, 65, p1);
	grid.Set(67, 65, p1);
	grid.Set(66, 66, p1);

}
